{"ast":null,"code":"import axios from 'axios';\naxios.defaults.baseURL = 'http://localhost:5252/';\nconst apiUrl = \"http://localhost:5252/\";\nconst apiAdd = \"http://localhost:5252/add\";\nconst apiDelete = \"http://localhost:5252/delete\";\nconst apiUpdate = \"http://localhost:5252/updateC\";\n\n// Create an axios instance\nconst instance = axios.create();\n\n// Add a response interceptor\ninstance.interceptors.response.use(response => {\n  // Return the response if it's successful\n  return response;\n}, error => {\n  // Log the error to the console\n  console.error(error);\n\n  // Throw the error to the caller\n  throw error;\n});\nexport default {\n  getTasks: async () => {\n    const result = await instance.get(apiUrl);\n    return result.data;\n  },\n  addTask: async name => {\n    try {\n      const response = await instance.post(`${apiAdd}/${name}`);\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n    return {};\n  },\n  setCompleted: async (id, isComplete) => {\n    try {\n      const response = await instance.put(`${apiUpdate}/${id}/${isComplete}`);\n      console.log('setCompleted', {\n        id\n      });\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n    return {};\n  },\n  deleteTask: async name => {\n    try {\n      const response = await instance.delete(`${apiDelete}/${name}`);\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n    console.log('deleteTask');\n    return {};\n  }\n};\n\n// import axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:5252/';\n\n// const apiUrl = \"http://localhost:5252/\"\n// const apiAdd=\"http://localhost:5252/add\"\n// const apiDelete=\"http://localhost:5252/delete\"\n// const apiUpdate=\"http://localhost:5252/updateC\"\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(apiUrl)    \n//     return result.data;\n//   },\n\n// //הוספת משימה\n//    addTask: async(name)=>{\n//   try {\n//     debugger\n//     console.log(name)\n//     const response = await axios.post(`${apiAdd}/${name}`);\n//     console.log(response.data);\n//   } catch (error) {\n//     console.error(error);\n//     // TODO: Handle the error as needed\n//     throw error;\n//   }\n//   return{};\n// },\n//   setCompleted: async(id,isComplete)=>{\n//     debugger\n//     // const response = await axios.post(`${apiAdd}/${name}`);\n\n//     const response = await axios.put(`${apiUpdate}/${id}/${isComplete}`);\n//      console.log('setCompleted', {id})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async(name)=>{\n//     try {\n//       debugger\n//       console.log(name)\n//       const response = await axios.delete(`${apiDelete}/${name}`);\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error(error);\n//       // TODO: Handle the error as needed\n//       throw error;\n//     }\n//     console.log('deleteTask')\n//     return{};\n//   }, \n\n// };","map":{"version":3,"names":["axios","defaults","baseURL","apiUrl","apiAdd","apiDelete","apiUpdate","instance","create","interceptors","response","use","error","console","getTasks","result","get","data","addTask","name","post","log","setCompleted","id","isComplete","put","deleteTask","delete"],"sources":["D:/פרקטיקוד/3/ToDoListReact-master/src/service.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'http://localhost:5252/';\n\nconst apiUrl = \"http://localhost:5252/\"\nconst apiAdd=\"http://localhost:5252/add\"\nconst apiDelete=\"http://localhost:5252/delete\"\nconst apiUpdate=\"http://localhost:5252/updateC\"\n\n// Create an axios instance\nconst instance = axios.create();\n\n// Add a response interceptor\ninstance.interceptors.response.use(\n  (response) => {\n    // Return the response if it's successful\n    return response;\n  },\n  (error) => {\n    // Log the error to the console\n    console.error(error);\n\n    // Throw the error to the caller\n    throw error;\n  }\n);\n\nexport default {\n  getTasks: async () => {\n    const result = await instance.get(apiUrl)\n    return result.data;\n  },\n\n  addTask: async (name) => {\n    try {\n      const response = await instance.post(`${apiAdd}/${name}`);\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n    return {};\n  },\n\n  setCompleted: async (id, isComplete) => {\n    try {\n      const response = await instance.put(`${apiUpdate}/${id}/${isComplete}`);\n      console.log('setCompleted', { id });\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n    return {};\n  },\n\n  deleteTask: async (name) => {\n    try {\n      const response = await instance.delete(`${apiDelete}/${name}`);\n      console.log(response.data);\n    } catch (error) {\n      console.error(error);\n      throw error;\n    }\n    console.log('deleteTask');\n    return {};\n  },\n};\n\n\n\n\n\n\n// import axios from 'axios';\n\n// axios.defaults.baseURL = 'http://localhost:5252/';\n\n\n// const apiUrl = \"http://localhost:5252/\"\n// const apiAdd=\"http://localhost:5252/add\"\n// const apiDelete=\"http://localhost:5252/delete\"\n// const apiUpdate=\"http://localhost:5252/updateC\"\n\n\n// export default {\n//   getTasks: async () => {\n//     const result = await axios.get(apiUrl)    \n//     return result.data;\n//   },\n\n// //הוספת משימה\n//    addTask: async(name)=>{\n//   try {\n//     debugger\n//     console.log(name)\n//     const response = await axios.post(`${apiAdd}/${name}`);\n//     console.log(response.data);\n//   } catch (error) {\n//     console.error(error);\n//     // TODO: Handle the error as needed\n//     throw error;\n//   }\n//   return{};\n// },\n//   setCompleted: async(id,isComplete)=>{\n//     debugger\n//     // const response = await axios.post(`${apiAdd}/${name}`);\n\n//     const response = await axios.put(`${apiUpdate}/${id}/${isComplete}`);\n//      console.log('setCompleted', {id})\n//     //TODO\n//     return {};\n//   },\n\n//   deleteTask:async(name)=>{\n//     try {\n//       debugger\n//       console.log(name)\n//       const response = await axios.delete(`${apiDelete}/${name}`);\n//       console.log(response.data);\n//     } catch (error) {\n//       console.error(error);\n//       // TODO: Handle the error as needed\n//       throw error;\n//     }\n//     console.log('deleteTask')\n//     return{};\n//   }, \n  \n\n// };\n \n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,wBAAwB;AAEjD,MAAMC,MAAM,GAAG,wBAAwB;AACvC,MAAMC,MAAM,GAAC,2BAA2B;AACxC,MAAMC,SAAS,GAAC,8BAA8B;AAC9C,MAAMC,SAAS,GAAC,+BAA+B;;AAE/C;AACA,MAAMC,QAAQ,GAAGP,KAAK,CAACQ,MAAM,CAAC,CAAC;;AAE/B;AACAD,QAAQ,CAACE,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAQ,IAAK;EACZ;EACA,OAAOA,QAAQ;AACjB,CAAC,EACAE,KAAK,IAAK;EACT;EACAC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;;EAEpB;EACA,MAAMA,KAAK;AACb,CACF,CAAC;AAED,eAAe;EACbE,QAAQ,EAAE,MAAAA,CAAA,KAAY;IACpB,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,GAAG,CAACb,MAAM,CAAC;IACzC,OAAOY,MAAM,CAACE,IAAI;EACpB,CAAC;EAEDC,OAAO,EAAE,MAAOC,IAAI,IAAK;IACvB,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,QAAQ,CAACa,IAAI,CAAE,GAAEhB,MAAO,IAAGe,IAAK,EAAC,CAAC;MACzDN,OAAO,CAACQ,GAAG,CAACX,QAAQ,CAACO,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,MAAMA,KAAK;IACb;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAEDU,YAAY,EAAE,MAAAA,CAAOC,EAAE,EAAEC,UAAU,KAAK;IACtC,IAAI;MACF,MAAMd,QAAQ,GAAG,MAAMH,QAAQ,CAACkB,GAAG,CAAE,GAAEnB,SAAU,IAAGiB,EAAG,IAAGC,UAAW,EAAC,CAAC;MACvEX,OAAO,CAACQ,GAAG,CAAC,cAAc,EAAE;QAAEE;MAAG,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOX,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,MAAMA,KAAK;IACb;IACA,OAAO,CAAC,CAAC;EACX,CAAC;EAEDc,UAAU,EAAE,MAAOP,IAAI,IAAK;IAC1B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAMH,QAAQ,CAACoB,MAAM,CAAE,GAAEtB,SAAU,IAAGc,IAAK,EAAC,CAAC;MAC9DN,OAAO,CAACQ,GAAG,CAACX,QAAQ,CAACO,IAAI,CAAC;IAC5B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB,MAAMA,KAAK;IACb;IACAC,OAAO,CAACQ,GAAG,CAAC,YAAY,CAAC;IACzB,OAAO,CAAC,CAAC;EACX;AACF,CAAC;;AAOD;;AAEA;;AAGA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA"},"metadata":{},"sourceType":"module","externalDependencies":[]}